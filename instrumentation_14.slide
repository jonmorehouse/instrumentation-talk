Instrumentation 
action oriented monitoring

Jon Morehouse
obsessed with computers
@buzzfeed
@jonmorehouse

* Video Stats

A case study:

- 40thousand-ish lines of python
- 12+ different types of workers
- collection, rollups, api-integrations, dashboards 
- able to think for itself

* VideoStats is broken!

.image giphy_broken.png

* but we have monitoring!

.image videostats_flower.png _ 1000

* and logs!

.image debugging_videostats.png

* so what's the problem??

* What if you ...

- didn't build this system?
- don't know anything about this system?
- don't know where logs are?
- don't have access to this system?
- don't know what is even broken?

* wait ... what is even broken guys?


.image giphy_nonsense.png _ 1200

Seriously though, this thing works for me?

* What if you could?


- define "broken"
- define "working"
- didn't have to build this system
- help, without being an engineer

.image giphy_dreaming.png _ 1000

* Graphs and dashboards

.image single_graph.png _ 550

.image dashboard.png _ 1000

* 

.image giphy_awesome.png _ 1200

* enter ... statsd

.image statsd.png _ 1000

* what is statsd?

- a stats protocol
- an aggregator of stats
- a way to write stats to other upstream systems
- simple!!!

.link https://github.com/etsy/statsd statsd

.image statsd_simple.png

* what is datadog?

- a statsd backend + more 
- visual UI for metrics
- shareable, collaborative, informative
- simple, accessible and helpful for everyone

.image datadog.png

* what sorts of metrics?

- increments
- times
- gauges

.link https://github.com/etsy/statsd/blob/master/docs/metric_types.md metric types

* another case study: distributed-stats-storage 

- a highly, distributed system
- lots of moving parts
- queuereaders, background jobs, rollups, archival
- dependency to many other systems
- lots of teams involved

*

.image giphy_oh_my.png

* what we care about

- what data went where
- how much data / hour
- how does this compare to yesterday, this week, this year?
- how many failures
- did things slow down?
- how many requests dropped

* what we don't care about

- cpu
- memory
- individual processes
- individual hosts

* action oriented

Action oriented instrumentation is logging/monitoring for distributed systems

- does our website work?
- are users experiencing data inaccuracies?
- are users experiencing outages?

* instrumentation as part of the development process

- instrumentation is _not_ an afterthought
- instrumentation is part of planning and development
- instrumentation is a key part of code review

.image statsd_comment.png

* Some final thoughts 

- build better graphs
- share better graphs

- Reading 

* last slide
.code statsd.py


