Instrumentation 
action oriented monitoring

Jon Morehouse
a computer obsessed geek
@jonmorehouse
@buzzfeed

* Let's start with a case study

* VideoStats

- 40thousand-ish lines of python
- 12+ different types of workers
- collection, rollups, api-integrations, dashboards 
- able to think for itself

.image videostats.png _ 500

* VideoStats is broken!

.image giphy_broken.png

* but we have monitoring!

.image videostats_flower.png _ 1000

* and logs!

.image debugging_videostats.png

* so what's the problem??

* What if you ...

- didn't build this system?
- don't know anything about this system?
- don't know where logs are?
- don't have access to this system?
- don't know what is even broken?

* wait ... what is even broken guys?


.image giphy_nonsense.png _ 1200

Seriously though, this thing works for me?

* What if you could?

- define "broken"
- define "working"
- debug, without knowing the system
- debug, without firing off random (dangerous?) `*sh` commands
- debug, without being an engineer

.image giphy_dreaming.png _ 1000

* Graphs and dashboards

.image single_graph.png _ 550

.image dashboard.png _ 1000

* 

.image giphy_awesome.png _ 1200

* enter ... statsd

.image statsd.png _ 1000

* what is statsd?

- a stats protocol
- an aggregator of stats
- a way to write stats to other upstream systems
- simple!!!

.image statsd_simple.png

* what is datadog?

- a statsd backend and more ..
- visual UI for metrics
- shareable, collaborative, informative
- simple, accessible and helpful for everyone

.image datadog.png

* what sorts of metrics?

- increments

.image incr_graph.png _ 680

- times

.image timing_graph.png _ 680

* another case study: distributed-stats-storage 

- a highly, distributed system
- lots of moving parts
- queuereaders, background jobs, rollups, archival
- dependency to many other systems
- lots of teams involved

*     

.image giphy_oh_my.png _ 1200

* what is important

- did the data get where it was supposed too?
- how much of the data is there?
- were things faster / slower than usual?
- how does this compare to last week, last month?

* what isn't important

- cpu
- memory
- individual processes
- individual hosts

* distributed stats storage dashboard

.image distributed_stats_dashboard.png _ 1000

* Distributed Systems require instrumentation

- more things that can break
- no one knows everything
- the code doesn't tell the whole story

.image giphy_who_built_this.png _ 900


* the 3am test

If someone gets woken up by the fail whale at 3am, can they debug your system?

.image fail_whale.png _ 800

* the development experience

- part of planning, speccing, scoping
- _not_ an after thought
- part of the review process

.image statsd_comment.png

* Some final thoughts 

- instrumentation, for the greater good
- systems must pass the "3am" test
- build better dashboards
- share better dashboards
- dashboards are for everyone

